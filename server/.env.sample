#optional port incase 3000 is busy
PORT=5000 

#CLOUDINARY_CLOUD_NAME or the cloud folder name where the images uploaded in cloudinary would be found, by default is empty string
CLOUDINARY_CLOUD_NAME="" #important

#CLOUDINARY_API_KEY or the cloudinary api secure id which will be used as a authentication method when connecting, by default is empty string
CLOUDINARY_API_KEY="" #important

#CLOUDINARY_API_KEY or the cloudinary api secure key which will be used as a authentication method when connecting like the CLOUDINARY_API_KEY, by default is empty string
CLOUDINARY_API_SECRECT="" #important

#the secure string which will be used to hash and then send to the user as a cookie, by default is empty string
JWT_SECRET="" #important

#the environmental variables used for credentials to the connection with database will have the extention "DB_" at the front because they wont workout without them

#DB_HOST or where the database is running, localhost by default
DB_HOST="localhost"

#DB_USER or the user defined while creating a host, root user by default
DB_USER="root"

#DB_DATABASE or the name of the database which would be created to store the tables in, by default is BLOG-DATA as a string
DB_DATABASE="BLOG-DATA"

#AUTHTABLE or the name of the table which would have all the user authentication information like email, username, password, by default is USER-AUTH as a string
DB_AUTHTABLE="USER-AUTH"

#POSTTABLE or the name of the table which would have all the post information like post title, post image, post paragraph and by default is POSTS as a string
DB_POSTTABLE="POSTS"

#DB_PASSWORD or the password that was defined when creating the user, just an empty string by default
DB_PASSWORD=""

#DB_WAITFORCONNECTIONS is a parameter which if true will make users wait in a queue for connections, by default is true
DB_WAITFORCONNECTIONS=true

#DB_CONENCTIONLIMIT or the limit of connections to the database after filled rest users will be saved in a queue, by default is 10
DB_CONENCTIONLIMIT=10

#DB_QUEUELIMIT or the limit of keeping users to the queue after the connection limit is filled, by default is 0
DB_QUEUELIMIT=0